{
	"practical": {
		"byId": {
			"algol68g": {
				"name": "ALGOL 68 (Genie)",
				"encoding": "SBCS",
				"link": "https://jmvdveer.home.xs4all.nl/algol.html",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print (\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"apl-dyalog-classic": {
				"name": "APL (Dyalog Classic)",
				"encoding": "SBCS",
				"link": "https://www.dyalog.com/",
				"prettify": "apl",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "⎕←'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"apl-dyalog": {
				"name": "APL (Dyalog Unicode)",
				"encoding": "UTF-8",
				"link": "https://www.dyalog.com/",
				"prettify": "apl",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "⎕←'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"apl-ngn": {
				"name": "APL (ngn-apl)",
				"encoding": "UTF-8",
				"link": "https://github.com/ngn/apl",
				"prettify": "apl",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "⎕←'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"assembly-as": {
				"name": "Assembly (x64, Linux, as)",
				"encoding": "SBCS",
				"link": "https://sourceware.org/binutils/docs/as/index.html",
				"unmask": [
					"cflags"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": ".text\n  .global _start\n_start:\nmovl $len,%edx\nmovl $msg,%ecx\nmovl $1,%ebx\nmovl $4,%eax\nint $0x80\nmovl $0,%ebx\nmovl $1,%eax\nint $0x80\n.data\nmsg:\n.ascii \"Hello, World!\n\"\nlen = . - msg\n"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"assembly-gcc": {
				"name": "Assembly (x64, Linux, gcc)",
				"encoding": "SBCS",
				"link": "https://gcc.gnu.org/",
				"unmask": [
					"cflags"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "SYS_write = 4\nSTDOUT = 1\n.data\nhello:\n.string \"Hello, World!\"\n.globl main\nmain:\nmovl $SYS_write,%eax\nmovl $STDOUT,%ebx\nmovl $hello,%ecx\nmovl $13,%edx\nint $0x80\nret\n"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"assembly-nasm": {
				"name": "Assembly (x64, Linux, nasm)",
				"encoding": "SBCS",
				"link": "http://www.nasm.us/",
				"unmask": [
					"cflags"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "section .text\nglobal _start\n_start:\nmov edx,len\nmov ecx,msg\nmov ebx,1\nmov eax,4\nint 0x80\nmov ebx,0\nmov eax,1\nint 0x80\nsection .data\nmsg db \"Hello, World!\",0xa\nlen equ $ - msg"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"awk": {
				"name": "AWK",
				"encoding": "UTF-8",
				"link": "https://www.gnu.org/software/gawk/manual/gawk.html",
				"unmask": [
					"options"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "BEGIN{print \"Hello, World!\"}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"bash": {
				"name": "Bash",
				"encoding": "UTF-8",
				"link": "https://www.gnu.org/software/bash/",
				"prettify": "bash",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "echo 'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"bc": {
				"name": "bc",
				"encoding": "UTF-8",
				"link": "https://www.gnu.org/software/bc/manual/html_mono/bc.html",
				"unmask": [
					"options"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print \"Hello, World!\";\n"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"c-clang": {
				"name": "C (clang)",
				"encoding": "SBCS",
				"link": "http://clang.llvm.org/",
				"prettify": "c",
				"unmask": [
					"cflags"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "#include <stdio.h>\nint main(int argc, char **argv) { printf(\"Hello, World!\"); }"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"c-gcc": {
				"name": "C (gcc)",
				"encoding": "SBCS",
				"link": "https://gcc.gnu.org/",
				"prettify": "c",
				"unmask": [
					"cflags"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "#include <stdio.h>\nint main(int argc, char **argv) { printf(\"Hello, World!\"); }"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"c-tcc": {
				"name": "C (tcc)",
				"encoding": "SBCS",
				"link": "http://savannah.nongnu.org/projects/tinycc",
				"prettify": "c",
				"unmask": [
					"cflags"
				],
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "main(){puts(\"Hello, World!\");}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"cs-core": {
				"name": "C# (.NET Core)",
				"encoding": "UTF-8",
				"link": "https://www.microsoft.com/net/core/platform",
				"prettify": "cs",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "class a{static void Main(){System.Console.Write(\"Hello, World!\");}}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"cs-mono": {
				"name": "C# (Mono)",
				"encoding": "UTF-8",
				"link": "http://www.mono-project.com/",
				"prettify": "cs",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "class a{static void Main(){System.Console.Write(\"Hello, World!\");}}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"cpp-gcc": {
				"name": "C++ (gcc)",
				"encoding": "SBCS",
				"link": "https://gcc.gnu.org/",
				"prettify": "cpp",
				"unmask": [
					"cflags"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "#include <stdio.h>\nint main(int argc, char **argv) { printf(\"Hello, World!\"); }"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"ceylon": {
				"name": "Ceylon",
				"encoding": "UTF-8",
				"link": "https://ceylon-lang.org/",
				"unmask": [
					"cflags",
					"options"
				],
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "shared void run(){print(\"Hello, World!\");}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"cheddar": {
				"name": "Cheddar",
				"encoding": "UTF-8",
				"link": "http://cheddar.vihan.org/",
				"update": "npm",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print (\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"scheme-chez": {
				"name": "Chez Scheme",
				"encoding": "UTF-8",
				"link": "https://cisco.github.io/ChezScheme/",
				"prettify": "scm",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "(display \"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"scheme-chicken": {
				"name": "CHICKEN Scheme",
				"encoding": "UTF-8",
				"link": "https://www.call-cc.org/",
				"prettify": "scm",
				"update": "no-version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "(display \"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"clojure": {
				"name": "Clojure",
				"encoding": "UTF-8",
				"link": "https://clojure.org/",
				"prettify": "clj",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "(println \"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"clisp": {
				"name": "Common Lisp",
				"encoding": "UTF-8",
				"link": "http://www.clisp.org/",
				"prettify": "lisp",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "(format t \"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"coffeescript": {
				"name": "CoffeeScript",
				"encoding": "UTF-8",
				"link": "http://coffeescript.org/",
				"prettify": "coffee",
				"update": "npm",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "console.log(\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"crystal": {
				"name": "Crystal",
				"encoding": "UTF-8",
				"link": "https://crystal-lang.org",
				"prettify": "ruby",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "puts \"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"dash": {
				"name": "Dash",
				"encoding": "UTF-8",
				"link": "https://wiki.debian.org/Shell",
				"prettify": "sh",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "echo 'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"d": {
				"name": "D",
				"encoding": "SBCS",
				"link": "https://dlang.org/",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "import std.stdio; void main(){writeln(\"Hello, World!\");}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"dc": {
				"name": "dc",
				"encoding": "UTF-8",
				"link": "https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html",
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "[Hello, World!]P"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"elf": {
				"name": "ELF (x86/x64, Linux)",
				"encoding": "xxd",
				"link": "https://refspecs.linuxfoundation.org/elf/elf.pdf",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "0000000: 7f 45 4c 46 01 00 00 00 00 00 00 00 00 90 43 0d  .ELF..........C.\n0000010: 02 00 03 00 19 90 43 0d 19 90 43 0d 04 00 00 00  ......C...C.....\n0000020: b9 2e 90 43 0d b2 0d cd 80 cc 20 00 01 00 48 65  ...C...... ...He\n0000030: 6c 6c 6f 2c 20 57 6f 72 6c 64 21                 llo, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"emacs-lisp": {
				"name": "Emacs Lisp",
				"encoding": "UTF-8",
				"link": "https://www.gnu.org/software/emacs/manual/eintr.html",
				"prettify": "lisp",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "(princ \"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"erlang-escript": {
				"name": "Erlang (escript)",
				"encoding": "UTF-8",
				"link": "http://erlang.org/doc/man/escript.html",
				"prettify": "erlang",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\nmain([])->\nio:fwrite(\"Hello, World!\")."
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"factor": {
				"name": "Factor",
				"encoding": "UTF-8",
				"link": "https://factorcode.org/",
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "USE: io \"Hello, World!\" print"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"fish-shell": {
				"name": "fish",
				"encoding": "UTF-8",
				"link": "https://fishshell.com/",
				"prettify": "sh",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "echo 'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"focal": {
				"name": "FOCAL-69",
				"encoding": "UTF-8",
				"link": "http://www.cozx.com/dpitts/",
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "10.10 t \"Hello, World!\"\ng"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"forth-gforth": {
				"name": "Forth (gforth)",
				"encoding": "UTF-8",
				"link": "http://www.complang.tuwien.ac.at/forth/gforth/Docs-html/",
				"prettify": "forth",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": ".( Hello, World!)"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"fs-mono": {
				"name": "F# (Mono)",
				"encoding": "UTF-8",
				"link": "http://www.mono-project.com/",
				"prettify": "fs",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "printfn \"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"go": {
				"name": "Go",
				"encoding": "UTF-8",
				"link": "https://golang.org/",
				"prettify": "go",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "package main\nimport \"fmt\"\nfunc main() {fmt.Printf(\"Hello, World!\")}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"scheme-guile": {
				"name": "Guile",
				"encoding": "UTF-8",
				"link": "https://www.gnu.org/software/guile/",
				"prettify": "scm",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "(display \"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"groovy": {
				"name": "Groovy",
				"encoding": "UTF-8",
				"link": "http://groovy-lang.org/",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print 'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"haskell": {
				"name": "Haskell",
				"encoding": "UTF-8",
				"link": "https://www.haskell.org/",
				"prettify": "hs",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "main=putStr\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"iron-python": {
				"name": "Iron Python",
				"encoding": "UTF-8",
				"link": "http://ironpython.net",
				"prettify": "python",
				"unmask": [
					"options"
				],
				"update": "github-release",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print(\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"j": {
				"name": "J",
				"encoding": "UTF-8",
				"link": "http://jsoftware.com/",
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "echo 'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"java-openjdk": {
				"name": "Java (OpenJDK 8)",
				"encoding": "UTF-8",
				"link": "http://openjdk.java.net/",
				"prettify": "java",
				"unmask": [
					"cflags"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "class HelloWorld {public static void main(String[] args) {System.out.println(\"Hello, World!\");}}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"java-openjdk9": {
				"name": "Java (OpenJDK 9)",
				"encoding": "UTF-8",
				"link": "http://openjdk.java.net/projects/jdk9/",
				"prettify": "java",
				"unmask": [
					"cflags"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "class HelloWorld {public static void main(String[] args) {System.out.println(\"Hello, World!\");}}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"javascript-babel-node": {
				"name": "JavaScript (Babel Node)",
				"encoding": "UTF-8",
				"link": "https://babeljs.io/",
				"prettify": "javascript",
				"update": "npm",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "console.log('Hello, World!')"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"javascript-node": {
				"name": "JavaScript (Node.js)",
				"encoding": "UTF-8",
				"link": "https://nodejs.org",
				"prettify": "javascript",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "console.log('Hello, World!')"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"joy": {
				"name": "Joy",
				"encoding": "UTF-8",
				"link": "http://www.latrobe.edu.au/humanities/research/research-projects/past-projects/joy-programming-language",
				"update": "no-version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "stdout \"Hello, World!\" fputstring pop.\nquit"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"julia": {
				"name": "Julia 0.4",
				"encoding": "UTF-8",
				"link": "http://julialang.org/",
				"prettify": "julia",
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "println(\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"julia5": {
				"name": "Julia 0.5",
				"encoding": "UTF-8",
				"link": "http://julialang.org/",
				"prettify": "julia",
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "println(\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"k-kona": {
				"name": "K (Kona)",
				"encoding": "UTF-8",
				"link": "https://github.com/kevinlawler/kona",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\\echo \"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"k-ok": {
				"name": "K (oK)",
				"encoding": "UTF-8",
				"link": "https://github.com/JohnEarnest/ok",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "{}`0:\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"kotlin": {
				"name": "Kotlin",
				"encoding": "UTF-8",
				"link": "https://kotlinlang.org",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "fun main(args:Array<String>){println(\"Hello, World!\")}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"ksh": {
				"name": "ksh",
				"encoding": "UTF-8",
				"link": "http://www.kornshell.com/",
				"prettify": "sh",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "echo 'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"lily": {
				"name": "Lily",
				"encoding": "UTF-8",
				"link": "http://fascinatedbox.github.io/lily/",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print(\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"llvm": {
				"name": "LLVM IR",
				"encoding": "UTF-8",
				"link": "http://llvm.org/docs/LangRef.html",
				"unmask": [
					"cflags"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "@str = internal constant [14 x i8] c\"Hello, World!\\00\"\ndeclare i32 @puts(i8*)\ndefine i32 @main()\n{\n  call i32 @puts( i8* getelementptr ([14 x i8], [14 x i8]* @str, i32 0,i32 0))\n  ret i32 0\n}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"lua": {
				"name": "Lua",
				"encoding": "UTF-8",
				"link": "https://www.lua.org",
				"prettify": "lua",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print(\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"mathics": {
				"name": "Mathics",
				"encoding": "UTF-8",
				"link": "http://mathics.github.io/",
				"update": "pip",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "Print@\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"maxima": {
				"name": "Maxima",
				"encoding": "UTF-8",
				"link": "http://maxima.sourceforge.net/",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print(\"Hello, World!\");"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"nim": {
				"name": "Nim",
				"encoding": "UTF-8",
				"link": "http://nim-lang.org/",
				"unmask": [
					"cflags"
				],
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "echo \"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"objective-c-clang": {
				"name": "Objective-C (clang)",
				"encoding": "SBCS",
				"link": "http://clang.llvm.org/",
				"prettify": "c",
				"unmask": [
					"cflags"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "int main(){printf(\"Hello, World!\");}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"ocaml": {
				"name": "OCaml",
				"encoding": "UTF-8",
				"link": "http://www.ocaml.org/",
				"prettify": "ml",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print_string \"Hello, World!\";;"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"octave": {
				"name": "Octave",
				"encoding": "UTF-8",
				"link": "https://www.gnu.org/software/octave/",
				"prettify": "matlab",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "printf(\"Hello, World!\");"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"pari-gp": {
				"name": "Pari/GP",
				"encoding": "UTF-8",
				"link": "http://pari.math.u-bordeaux.fr/",
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print1(\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"perl5": {
				"name": "Perl 5",
				"encoding": "UTF-8",
				"link": "https://www.perl.org/",
				"prettify": "perl",
				"unmask": [
					"options"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print \"Hello, World!\";"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"perl6": {
				"name": "Perl 6",
				"encoding": "UTF-8",
				"link": "https://perl6.org",
				"prettify": "perl6",
				"unmask": [
					"options"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print \"Hello, World!\";"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"php": {
				"name": "PHP",
				"encoding": "UTF-8",
				"link": "https://php.net/",
				"prettify": "php",
				"unmask": [
					"options"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"picolisp": {
				"name": "PicoLisp",
				"encoding": "UTF-8",
				"link": "http://picolisp.com/",
				"prettify": "lisp",
				"update": "no-version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "(prinl \"Hello, World!\")(bye)"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"powershell": {
				"name": "PowerShell",
				"encoding": "UTF-8",
				"link": "https://github.com/TryItOnline/TioSetup/wiki/Powershell",
				"prettify": "powershell",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"powershell-core": {
				"name": "PowerShell Core",
				"encoding": "UTF-8",
				"link": "https://github.com/PowerShell/PowerShell",
				"prettify": "powershell",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"prolog-swi": {
				"name": "Prolog (SWI)",
				"encoding": "UTF-8",
				"link": "http://www.swi-prolog.org",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "?-write('Hello, World!')."
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"python2": {
				"name": "Python 2",
				"encoding": "UTF-8",
				"link": "https://docs.python.org/2/",
				"prettify": "python",
				"unmask": [
					"options"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print(\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"python2-pypy": {
				"name": "Python 2 (PyPy)",
				"encoding": "UTF-8",
				"link": "http://pypy.org/",
				"prettify": "python",
				"unmask": [
					"options"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print(\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"python3": {
				"name": "Python 3",
				"encoding": "UTF-8",
				"link": "https://docs.python.org/3/",
				"prettify": "python",
				"unmask": [
					"options"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print(\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"r": {
				"name": "R",
				"encoding": "UTF-8",
				"link": "https://www.r-project.org/",
				"prettify": "r",
				"update": "no-version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "cat(\"Hello, World!\");"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"racket": {
				"name": "Racket",
				"encoding": "UTF-8",
				"link": "https://racket-lang.org/",
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "#lang racket/base\n(display \"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"rexx": {
				"name": "Rexx (Regina)",
				"encoding": "UTF-8",
				"link": "http://www.rexx.org/",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "say \"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"roda": {
				"name": "Röda",
				"encoding": "UTF-8",
				"link": "https://github.com/fergusq/roda",
				"update": "github-release",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "main{print\"Hello, World!\"}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"ruby": {
				"name": "Ruby",
				"encoding": "UTF-8",
				"link": "https://www.ruby-lang.org/",
				"prettify": "ruby",
				"unmask": [
					"options"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "puts 'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"rust": {
				"name": "Rust",
				"encoding": "UTF-8",
				"link": "https://www.rust-lang.org/",
				"prettify": "rust",
				"unmask": [
					"cflags"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "fn main(){println!(\"Hello, World!\");}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"scala": {
				"name": "Scala",
				"encoding": "UTF-8",
				"link": "http://www.scala-lang.org/",
				"unmask": [
					"cflags"
				],
				"prettify": "scala",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "object Main extends App{print(\"Hello, World!\")}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"sed": {
				"name": "sed",
				"encoding": "UTF-8",
				"link": "https://www.gnu.org/software/sed/",
				"unmask": [
					"options"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "s/.*/Hello, World!/"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"sqlite": {
				"name": "SQLite",
				"encoding": "UTF-8",
				"link": "https://www.sqlite.org/",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "select 'Hello, World!';"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"stacked": {
				"name": "Stacked",
				"encoding": "UTF-8",
				"link": "https://github.com/ConorOBrien-Foxx/stacked",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "'Hello, World!' out"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"sml-mlton": {
				"name": "Standard ML (MLton)",
				"encoding": "UTF-8",
				"link": "http://www.mlton.org/",
				"prettify": "ml",
				"unmask": [
					"cflags"
				],
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print \"Hello, World!\";"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"tcl": {
				"name": "Tcl",
				"encoding": "UTF-8",
				"link": "http://tcl.tk/",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "puts Hello,\\ World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"tcsh": {
				"name": "tcsh",
				"encoding": "UTF-8",
				"link": "http://www.tcsh.org/",
				"prettify": "sh",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "echo 'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"ubasic": {
				"name": "uBASIC",
				"encoding": "SBCS",
				"link": "https://github.com/EtchedPixels/ubasic",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "10 PRINT \"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"vala": {
				"name": "Vala",
				"encoding": "UTF-8",
				"link": "https://wiki.gnome.org/Projects/Vala",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "void main () { print (\"Hello, World!\");}"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"visual-basic-net-mono": {
				"name": "Visual Basic .NET (Mono)",
				"encoding": "UTF-8",
				"link": "http://www.mono-project.com/docs/about-mono/languages/visualbasic/",
				"prettify": "vb",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "Module Hello\nSub Main()\nConsole.WriteLine(\"Hello, World!\")\nEnd Sub\nEnd Module"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"zsh": {
				"name": "Zsh",
				"encoding": "UTF-8",
				"link": "https://www.zsh.org/",
				"prettify": "sh",
				"update": "dnf",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "echo 'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			}
		},
		"nameIdPairs": []
	},
	"recreational": {
		"byId": {
			"slashes": {
				"name": "///",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki////",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"shp": {
				"name": ";#+",
				"encoding": "SBCS",
				"link": "https://github.com/ConorOBrien-Foxx/shp",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": ";;;;;;;;;~++++++++>#<+++;;:>#<+-;;>#<#<-;;;>#<-+++++++;;;;-:>#<-+;;;#::<;;;-++#:<#<;;;#-<;;;#<+;;#-:<-+;;#"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"fish": {
				"name": "><>",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/Fish",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "!v\"Hello, World!\"r!\n >l?!;o"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"05ab1e": {
				"name": "05AB1E",
				"encoding": "SBCS",
				"link": "https://github.com/Adriandmen/05AB1E",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"2sable": {
				"name": "2sable",
				"encoding": "SBCS",
				"link": "https://github.com/Adriandmen/2sable",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"3var": {
				"name": "3var",
				"encoding": "SBCS",
				"link": "https://esolangs.org/wiki/3var",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "iisssaa/>emaa->e#aamam->e#dddddddddddddddddddddddddPiiiiiiiiiiiiiiiiiiiiiiiiiiiiiPiiiiiiiPPiiiPriissaa*>iiiiiiiiiiiiPriisaamaaaa*>Priisssaa/>emaa->e#aamam->e#ddddddddddPiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiddddddddPiiiPddddddPddddddddPriissaa*>iP"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"7": {
				"name": "7",
				"encoding": "it's complicated",
				"link": "https://esolangs.org/wiki/7",
				"update": "no-version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "5325101303040432004513151401430134321027403"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"99": {
				"name": "99",
				"encoding": "UTF-8",
				"link": "https://codegolf.stackexchange.com/q/47588/12012",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "999 9 9\n99 99999999 999 9\n99\n99 99999 9 999 9\n99\n99 99 999 999999\n99\n99\n99 9999999 9999 999 9\n99\n99 99 9999999 9 999 9 999 9 999 9\n99\n99 99 999999 9 999999 9\n99\n9999\n99 99999 999 999999 999 9\n99\n99 9999999 9999 9 999 9\n99\n99 99 999999 9\n99\n99 99 999999 999 9\n99\n99 99999 9999999 9\n99"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"a-pear-tree": {
				"name": "A Pear Tree",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/A_Pear_Tree",
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "#r3TQJ\nprint(\"Hello, World!\")"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"agony": {
				"name": "Agony",
				"encoding": "UTF-8",
				"link": "https://github.com/royvanrijn/JAgony",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "<[.<]$$$,{}~<~)+{~*@+{$~*~)~)~@<-"
							}
						}],
						"response": "Hello World!"
					}
				}
			},
			"alice": {
				"name": "Alice",
				"encoding": "UTF-8",
				"link": "https://github.com/m-ender/alice",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "/OH!lloo /\n@\"\"edlr,W\\ "
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"alphuck": {
				"name": "Alphuck",
				"encoding": "SBCS",
				"link": "https://github.com/TryItOnline/tio-transpilers",
				"update": "piggyback",
				"piggiback": "brainfuck",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "iiciccepepceaiiiaiaiaicccsascciijceeeeeejccijjccjcejaajaajcccjeeejaajaaijcccej"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"arcyou": {
				"name": "Arcyóu",
				"encoding": "UTF-8",
				"link": "https://github.com/Nazek42/arcyou",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"arnoldc": {
				"name": "ArnoldC",
				"encoding": "SBCS",
				"link": "https://lhartikk.github.io/ArnoldC/",
				"update": "no-version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "IT'S SHOWTIME\nTALK TO THE HAND \"Hello, World!\"\nYOU HAVE BEEN TERMINATED"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"axo": {
				"name": "axo",
				"encoding": "SBCS",
				"link": "https://esolangs.org/wiki/Axo",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"!dlroW ,o%\n\\%#[<\"Hell<\n >( ^"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"aubergine": {
				"name": "Aubergine",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/Aubergine",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "=aA-a1=oA=bi+b1-Ab-bb:bA+B1=iBGolf by Quintopia\n!dlroW ,olleH"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"actually": {
				"name": "Actually",
				"encoding": "SBCS",
				"link": "https://github.com/Mego/Seriously",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "H"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"beatnik": {
				"name": "Beatnik",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/Beatnik",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "K QQQQQQQG ZD XO K QQJA KD ZD XO K KG KD ZD ZD ZD XO XO K B KD ZD XO K QQQQF ZD ZD XO K QQQD XO K A Z KD XO ZD XO K B KD XO ZD XO K J Z XO K QQQB XO"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"beam": {
				"name": "Beam",
				"encoding": "UTF-8",
				"link": "https://github.com/ETHproductions/beam-js",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "'''''''''>`++++++++)@'''''''>`++++)+@+++++++@@+++@L'''''>`+++++++++)-@'''>`----)@'''''>`+++++++++++)@'''''>`+++++)-@+++@------@--------@'''''''>`---------)----@H"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"bean": {
				"name": "Bean",
				"encoding": "xxd",
				"link": "https://github.com/patrickroberts/bean",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "00000000: 2623 8100 c8e5 ecec efac a0d7 eff2 ece4  &#..............\n00000010: 21                                       !"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"beeswax": {
				"name": "Beeswax",
				"encoding": "UTF-8",
				"link": "https://github.com/m-lohmann/BeeswaxEsolang.jl",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "_`Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"befunge": {
				"name": "Befunge",
				"encoding": "UTF-8",
				"link": "https://github.com/catseye/Befunge-93",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": " >25*\"!dlroW ,olleH\":v\n                  v:,_@\n                  >  ^"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"befunge-98": {
				"name": "Befunge-98",
				"encoding": "UTF-8",
				"link": "https://github.com/catseye/FBBI",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"9!dlroW ,olleH\"ck,@"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"blc": {
				"name": "Binary Lambda Calculus",
				"encoding": "xxd",
				"link": "https://tromp.github.io/cl/cl.html",
				"update": "no-version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "0000000: 44 51 a1 01 84 55 d5 02 b7 70 30 22 ff 32 f0 00  DQ...U...p0\".2..\n0000010: bf f9 85 7f 5e e1 6f 95 7f 7d ee c0 e5 54 68 00  ....^.o..}...Th.\n0000020: 58 55 fd fb e0 45 57 fd eb fb f0 b6 f0 2f d6 07  XU...EW....../..\n0000030: e1 6f 73 d7 f1 14 bc c0 0b ff 2e 1f a1 6f 66 17  .os..........of.\n0000040: e8 5b ef 2f cf ff 13 ff e1 ca 34 20 0a c8 d0 0b  .[./......4 ....\n0000050: 99 ee 1f e5 ff 7f 5a 6a 1f ff 0f ff 87 9d 04 d0  ......Zj........\n0000060: ab 00 05 db 23 40 b7 3b 28 cc c0 b0 6c 0e 74 10  ....#@.;(...l.t.\n0000070: 2d 2d 2d 3e 2d 3e 2d 3e 3e 2b 3e 2b 3e 3e 2b 5b  --->->->>+>+>>+[\n0000080: 2b 2b 2b 2b 5b 3e 2b 2b 2b 5b 3e 2b 2b 2b 2b 3e  ++++[>+++[>++++>\n0000090: 2d 2d 3e 2b 2b 2b 3c 3c 3c 2d 5d 3c 2d 5d 3c 2b  -->+++<<<-]<-]<+\n00000a0: 2b 2b 5d 3e 3e 3e 2e 3e 2d 2d 3e 2d 2e 3e 2e 2e  ++]>>>.>-->-.>..\n00000b0: 2b 3e 2b 2b 2b 2b 3e 2b 2b 2b 2e 2b 3e 2d 2d 3e  +>++++>+++.+>-->\n00000c0: 5b 3e 2d 2e 3c 3c 5d 5d                          [>-.<<]]"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"brachylog": {
				"name": "Brachylog v1",
				"encoding": "UTF-8",
				"link": "https://github.com/JCumin/Brachylog/releases",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\"w"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"brachylog2": {
				"name": "Brachylog",
				"encoding": "SBCS",
				"link": "https://github.com/JCumin/Brachylog",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\"w"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"brain-flak": {
				"name": "Brain-Flak",
				"encoding": "SBCS",
				"link": "https://github.com/DJMcMayhem/Brain-Flak",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
								"command": "F",
								"payload": {
									".code.tio": "((()()())((((((((({})){}{}){}){}){})(((()()()){}()){}){}())([])[]{})))((((([][]()){}){})[[][]])<>)<>((((((({}))[]{}[][]())[][][])()()())[[]]()()()())[[]]()()())(<>{}()<>)"
								}
							},
							{
								"command": "V",
								"payload": {
									"args": [
										"-Ar"
									]
								}
							}
						],
						"response": "Hello, World!"
					}
				}
			},
			"brainbool": {
				"name": "brainbool",
				"encoding": "SBCS",
				"link": "https://github.com/TryItOnline/tio-transpilers",
				"update": "piggyback",
				"piggiback": "brainfuck",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "--<-<<+[+[<+>--->->->-<<<]>]<<--.<++++++.<<-..<<.<+.>>.>>.<<<.+++.>>.>>-.<<<+."
							}
						}],
						"response": "0000010001001"
					}
				}
			},
			"brainfuck": {
				"name": "brainfuck",
				"encoding": "SBCS",
				"link": "https://github.com/TryItOnline/tio-transpilers",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "--<-<<+[+[<+>--->->->-<<<]>]<<--.<++++++.<<-..<<.<+.>>.>>.<<<.+++.>>.>>-.<<<+."
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"brian-chuck": {
				"name": "Brian & Chuck",
				"encoding": "UTF-8",
				"link": "https://github.com/m-ender/brian-chuck",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "_#Jgnnq.\"Yqtnf#_{?\n#{<{>-?>--.>?"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"bubblegum": {
				"name": "Bubblegum",
				"encoding": "xxd",
				"link": "https://esolangs.org/wiki/Bubblegum",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "0:15274d5062a99a296b6de2"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"cardinal": {
				"name": "Cardinal",
				"encoding": "UTF-8",
				"link": "https://www.esolangs.org/wiki/Cardinal",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "%\"Hello, World!\";x"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"chain": {
				"name": "Chain",
				"encoding": "SBCS",
				"link": "https://github.com/ConorOBrien-Foxx/Chain",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"changeling": {
				"name": "Changeling",
				"encoding": "UTF-8",
				"link": "https://github.com/DennisMitchell/shapescript",
				"update": "piggyback",
				"piggiback": "shapescript",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"IpQ:AQ..\n\"\"2(-znK]\n\"\" \"Tr4r[\n\"\")$dNcA.\n\"\" #!&...\n.........\n.........\n.........\n.........\n"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"charcoal": {
				"name": "Charcoal",
				"encoding": "SBCS",
				"link": "https://github.com/somebody1234/Charcoal",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"chip": {
				"name": "Chip",
				"encoding": "UTF-8",
				"link": "https://github.com/Phlarx/chip",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
								"command": "F",
								"payload": {
									".code.tio": "*s\n`ZvZvZvZvZvZvZvZvZvZvt\nh-/-/-/-/-/-/-/-/-/-/-\ng÷/-/-/-/-/÷/÷/-/-/-/-\nf÷/-/-/-/-/-/-/-/-/-/-\ne-/-/-/-/-/-/÷/÷/÷/÷/-\nd÷/÷/÷/-/-/÷/-/÷/÷/÷/÷\nc-/÷/-/-/-/÷/÷/-/÷/÷/-\nb-/-/-/-/÷/÷/÷/-/-/÷/-\na-/÷/÷/-/÷/÷/÷/-/÷/-/-"
								}
							},
							{
								"command": "V",
								"payload": {
									"args": [
										"-w"
									]
								}
							}
						],
						"response": "hello world"
					}
				}
			},
			"cinnamon-gum": {
				"name": "Cinnamon Gum",
				"encoding": "xxd",
				"link": "https://github.com/quartata/cinnamon-gum",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "00000000: 2201 1d92 93bd 33f1 a12f 2a4e 940b 32    \".....3../*N..2"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"cjam": {
				"name": "CJam",
				"encoding": "SBCS",
				"link": "https://sourceforge.net/p/cjam",
				"update": "hg",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"condit": {
				"name": "Condit",
				"encoding": "UTF-8",
				"link": "https://github.com/TryItOnline/condit",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "when H=\"\"then set H=\"Hello, World!\"put H\n"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"convex": {
				"name": "Convex",
				"encoding": "SBCS",
				"link": "https://github.com/GamrCorps/Convex",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"cow": {
				"name": "COW",
				"encoding": "SBCS",
				"link": "https://bigzaphod.github.io/COW/",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO Moo MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO Moo MoO MoO MoO MoO MoO MoO MoO Moo Moo MoO MoO MoO Moo OOO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO Moo MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO Moo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo MOo Moo MOo MOo MOo MOo MOo MOo MOo MOo Moo MoO MoO MoO Moo MOo MOo MOo MOo MOo MOo Moo MOo MOo MOo MOo MOo MOo MOo MOo Moo OOO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO MoO Moo"
							}
						}],
						"response": "Hello,�world!"
					}
				}
			},
			"crayon": {
				"name": "Crayon",
				"encoding": "UTF-8",
				"link": "https://github.com/ETHproductions/crayon",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\"q"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"cubix": {
				"name": "Cubix",
				"encoding": "UTF-8",
				"link": "https://github.com/ETHproductions/cubix",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "./v.o;@?/\"!dlroW\"S',u/\"Hello\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"cy": {
				"name": "Cy",
				"encoding": "UTF-8",
				"link": "https://github.com/cyoce/Cy",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\" :<"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"delimit": {
				"name": "Del|m|t",
				"encoding": "UTF-8",
				"link": "https://github.com/MistahFiggins/Delimit",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
								"command": "F",
								"payload": {
									".code.tio": "=#:#Hello, World!#/##3#=#?#9#\""
								}
							},
							{
								"command": "V",
								"payload": {
									"args": [
										"#"
									]
								}
							}
						],
						"response": "Hello, World!"
					}
				}
			},
			"detour": {
				"name": "Detour",
				"encoding": "UTF-8",
				"link": "https://github.com/cyoce/detour",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "`u\n@\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"dstack": {
				"name": "DStack",
				"encoding": "SBCS",
				"link": "https://github.com/alejandrocoria/DStack",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "@0\nHello, World!\n@\nad"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"emmental": {
				"name": "Emmental",
				"encoding": "UTF-8",
				"link": "https://github.com/catseye/Emmental",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": ";#58#126#63#36!;#46#36#!;#0#1!;#0#2!;#0#3!;#0#4!;#0#5!;#0#6!;#0#7!#0#33#100#108#114#111#119#32#44#111#108#108#101#72$"
							}
						}],
						"response": "Hello, world!"
					}
				}
			},
			"eta": {
				"name": "ETA",
				"encoding": "SBCS",
				"link": "http://www.miketaylor.org.uk/tech/eta/doc/",
				"update": "no-version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "NINENAHAENATOENAAAENATSENTNOENIIENSAENATSENATOENATOENAHOENTOAEOOOOOOOOOOOOO"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"emoji": {
				"name": "Emoji",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/Emoji",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "💬Hello, World!💬➡"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"emojicode": {
				"name": "Emojicode",
				"encoding": "UTF-8",
				"link": "http://www.emojicode.org/",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "🏁🍇😀🔤Hello, World!🔤🍉"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"element": {
				"name": "Element",
				"encoding": "UTF-8",
				"link": "https://github.com/PhiNotPi/Element",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "Hello\\,\\ World\\!`"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"evil": {
				"name": "evil",
				"encoding": "UTF-8",
				"link": "https://web.archive.org/web/20070103000858/www1.pacific.edu/~twrensch/evil/index.html",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "aeeeaeeewueuueweeueeuewwaaaweaaewaeaawueweeeaeeewaaawueeueweeaweeeueuw"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"feu": {
				"name": "FEU",
				"encoding": "UTF-8",
				"link": "https://github.com/tuxcrafting/feu",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "a/Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"fernando": {
				"name": "FerNANDo",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/FerNANDo",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "7 7\n3\n5 5\n6 5\n4 3 3\n0 5 3 0 7 3 0 0\n0 5 7 0 0 5 0 4\n0 6 5 2 4 6 2 3\n0 6 6 0 7 7 2 3\n0 6 6 2 5 4 7 4\n2 2\n3 5\n3"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"fireball": {
				"name": "Fireball",
				"encoding": "SBCS",
				"link": "https://github.com/okx-code/Fireball",
				"update": "github-release",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"fission": {
				"name": "Fission",
				"encoding": "SBCS",
				"link": "https://github.com/C0deH4cker/Fission",
				"update": "manual",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "R\"Hello, World!\";"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"fission2": {
				"name": "Fission 2",
				"encoding": "SBCS",
				"link": "https://github.com/C0deH4cker/Fission",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "R\"Hello, World!\";"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"foo": {
				"name": "Foo",
				"encoding": "SBCS",
				"link": "https://esolangs.org/wiki/Foo",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"forte": {
				"name": "Forte",
				"encoding": "UTF-8",
				"link": "https://github.com/judofyr/forter",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "102 PRINT \"Hello, World!\":END"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"fourier": {
				"name": "Fourier",
				"encoding": "UTF-8",
				"link": "https://github.com/beta-decay/Fourier",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "72a101a+7aa+3a44a32a87a111a+3a-6a-8a33a"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"funciton": {
				"name": "Funciton",
				"encoding": "UTF-8",
				"link": "https://github.com/Timwi/Funciton",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "╔═══════════════╗\n║ 2388215291394 ║\n║ 5970717094395 ║\n║ 9830070909071 ║\n║ 3359207734160 ║\n║ 6896177782105 ║\n║ 7169552834632 ║\n╚═══════╤═══════╝\n        │"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"glypho": {
				"name": "Glypho",
				"encoding": "SBCS",
				"link": "https://web.archive.org/web/20060621185740/http://www4.ncsu.edu/~bcthomp2/glypho.txt",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "aabcabababbaababaabcabbaabababbcabbaabababababababbaabbaabababababababbaabbaaabcabbaababaabcaabcabbaabababbcabababbaabbaababaabcaabcabbaaabcabbaabababbaabbaababaabcabcaabababababbaabbaabbaababaabcabaaababaabaabbaabcaabababbaabbaaabcaabcabbaabababbcabababbcabababbaabaaababaabaabababbaabababbaabababaaababaabaabbaabababbaaabcabbaababaabcabcaabababababbaabbaabbaababaabcabcaabaaababaabaabbaabababbcaabcabbaaabcaabcabbaaabcabbaabababbaabababbcabababbaabaaabababcaabbaaabaabacabbbabcb"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"glypho-shorthand": {
				"name": "Glypho (shorthand)",
				"encoding": "UTF-8",
				"link": "https://web.archive.org/web/20060621185740/http://www4.ncsu.edu/~bcthomp2/glypho.txt",
				"update": "piggyback",
				"piggiback": "glypho",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "1d+d1+d*+ddd++ddd++1+d11+d*d++d11+1+d++d1-dd+++d1<d>+-d++11+d*d*d+<d>d+d+d<d>+d+1+d1-dd+++d1-<d>+d*1+11+1+d+d*d+<d-+>[o]"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"golfscript": {
				"name": "GolfScript",
				"encoding": "SBCS",
				"link": "http://www.golfscript.com/golfscript/",
				"update": "no-version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"grass": {
				"name": "Grass",
				"encoding": "UTF-8",
				"link": "https://github.com/TryItOnline/grass",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "wWWwwww"
							}
						}],
						"response": "w"
					}
				}
			},
			"grime": {
				"name": "Grime",
				"encoding": "UTF-8",
				"link": "https://github.com/iatorm/grime",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
								"command": "F",
								"payload": {
									".code.tio": ".+"
								}
							},
							{
								"command": "F",
								"payload": {
									".input.tio": "Hello, World!"
								}
							}
						],
						"response": "Hello, World!"
					}
				}
			},
			"gs2": {
				"name": "GS2",
				"encoding": "SBCS",
				"link": "https://github.com/nooodl/gs2",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "↕h"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"i": {
				"name": "I",
				"encoding": "UTF-8",
				"link": "https://github.com/mlochbaum/ILanguage",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\""
							}
						}],
						"response": "\"Hello, World!\""
					}
				}
			},
			"hbcht": {
				"name": "Half-Broken Car in Heavy Traffic",
				"encoding": "UTF-8",
				"link": "https://git.metanohi.name/hbcht.git/",
				"update": "pip",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "; Prints \"Hello, world!\n\".\n@outtext\n\n     v                           >v       ^\n> v  <                            v     >>^<\n  v  ^  v                         v     ^\n     ^  <                         v     ^\n        ^                         v     ^\n  >   />^<v                       v     ^\n  ^  >v<  <                       v     ^\n          ^                       v     ^\n  ^   > />^<v                     v     ^   #\n  ^   ^>v<  <                     v     ^   ^\n  ^         ^                     v     ^   ^\n  ^     > />^<v                   v     ^   ^\n  ^     ^>v<  <                   v     ^   ^\n  ^           ^                   v     ^   ^\n  ^       > />^<v                 v     ^   ^\n  ^       ^>v<  <                 v     ^   ^\n  ^             ^                 v     ^   ^\n  ^         > />^<v               v     ^   ^\n  ^         ^>v<  <           >v  v     ^ >>^<\n  ^               ^           ^v  v     ^ ^\n  ^           > />^<v         ^v  v     ^ ^\n  ^           ^>v<  <         ^v  v   >>^<^\n  ^                 ^         ^v  v   ^   ^\n  ^             > />^<v       ^v  v   ^   ^\n  ^             ^>v<  <       ^v  v   ^   ^\n  ^                   ^       ^v  v   ^   ^\n  ^               > />^<v     ^v  v   ^   ^\n  ^               ^>v<  <     ^v  v   ^   ^\n  ^                     ^     ^v  v   ^   ^\n  ^                 > />^<v   ^v  v   ^   ^\n  ^                 ^>v<  <   ^v  v   ^   ^\n  ^                       ^   ^v  v   ^   ^\n  ^                   > />^<v ^v  v   ^   ^\n  ^                   ^>v<  < ^v  v   ^   ^\n  ^                         ^ ^v  v   ^   ^\n  ^                     > />^<^v  v   ^   ^\n  ^                >>   ^     ^ < v   ^   ^\n  ^          >v<<<<<<<<<<<<    v  v   ^   ^\n  ^           v   >^<          v  v >>^<  ^\n  ^           v  > >v          v  v ^     ^\n> ^   v       v  ^^            v  v ^     ^\n^ ^           v  ^^            v  v ^     ^\n^ ^           v  ^^            v  v ^     ^\n^ ^           v  ^^            v  v ^     ^\n^ ^           v  ^^            v  v ^     ^\n^ ^           v  ^^            v  v ^     ^\n^ ^           v  ^^            v  v ^     ^\n^ ^           v  ^^            v  v ^     ^\n^ ^           v  ^^            v  v ^     ^\n^ ^           v  ^^            v  v ^     ^\n^ ^           v  ^^            v  v ^     ^\n^ ^           v  ^^            v  v ^   >>^<\n^ ^           v  ^^ <          v  v ^   ^\n^ ^           v>>^<            v  v ^   ^\n^ ^                            v  v ^   ^\n^ ^           v^               v  v ^   ^\n^ ^           v^               v  v ^   ^\n^ ^           v^               v  v ^     v\n^ ^           v^               v  v ^>v   <\n^ ^           v^               v  v ^ >>^<^\n^ ^        >v <^               v  v ^ ^   ^\n^ ^         >>^^<              v  v ^     ^\n^ ^         ^                  v  v ^     ^\n^ ^                            v  >>^<    ^\n^ ^                            v  ^       ^\n^ ^                            v          ^\n^ ^                            v          ^\n^ ^    v                       v          ^\n^ ^    <                       v          ^\n^     >^<                      v          ^\n^     ^                        v          ^\n^     v                        > ^<       ^\n^     <                        ^\n    >>^<\n >  ^<v\n ^ >v<<\n  v\n>v<\n  ^\n >^<\n o>v\n v >  ^<\n v ^"
							}
						}],
						"response": "Hello, world!"
					}
				}
			},
			"haystack": {
				"name": "Haystack",
				"encoding": "UTF-8",
				"link": "https://github.com/kade-robertson/haystack",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\"o|"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"hexagony": {
				"name": "Hexagony",
				"encoding": "UTF-8",
				"link": "https://github.com/m-ender/hexagony",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "H;e;P1;@/;W;o;/l;;o;Q/r;l;d;2;P0"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"intercal": {
				"name": "INTERCAL",
				"encoding": "UTF-8",
				"link": "http://www.catb.org/~esr/intercal/",
				"unmask": [
					"cflags"
				],
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "DO,1<-#14 DO,1SUB#1<-#238 DO,1SUB#2<-#108 DO,1SUB#3<-#112 PLEASE DO,1SUB#4<-#256 DO,1SUB#5<-#64 DO,1SUB#6<-#194 PLEASE DO,1SUB#7<-#48 DO,1SUB#8<-#26 DO,1SUB#9<-#244 PLEASE DO,1SUB#10<-#168 DO,1SUB#11<-#24 DO,1SUB#12<-#16 PLEASE DO,1SUB#13<-#162 DO,1SUB#14<-#52 DO READ OUT,1 DO GIVE UP"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"j-uby": {
				"name": "J-uby",
				"encoding": "UTF-8",
				"link": "https://github.com/cyoce/J-uby",
				"unmask": [
					"options"
				],
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "put = :puts & $>\nput ^ \"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"japt": {
				"name": "Japt",
				"encoding": "SBCS",
				"link": "https://github.com/ETHproductions/japt",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "`HÁM, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"jelly": {
				"name": "Jelly",
				"encoding": "SBCS",
				"link": "https://github.com/DennisMitchell/jelly",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "“3ḅaė;œ»"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"jellyfish": {
				"name": "Jellyfish",
				"encoding": "UTF-8",
				"link": "https://github.com/iatorm/jellyfish",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "P\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"klein": {
				"name": "Klein",
				"encoding": "UTF-8",
				"link": "https://github.com/Wheatwizard/Klein",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
								"command": "F",
								"payload": {
									".code.tio": "\"Hello, World!\"@"
								}
							},
							{
								"command": "V",
								"payload": {
									"args": [
										"000",
										"-A"
									]
								}
							}
						],
						"response": "Hello, World!"
					}
				}
			},
			"labyrinth": {
				"name": "Labyrinth",
				"encoding": "UTF-8",
				"link": "https://github.com/m-ender/labyrinth",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "72.10:1.:8:..:):1:.#2#4..:1..4.:8.0.33.@"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"logicode": {
				"name": "Logicode",
				"encoding": "UTF-8",
				"link": "https://github.com/LogicodeLang/Logicode",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "var a=11011\nvar l=@(a+00)\nvar o=a+11\nout @1001000+@1100101+l+l+@o+@101100+@100000+@1010111+@o+@1110010+l+@1100100+@100001"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"lolcode": {
				"name": "LOLCODE",
				"encoding": "SBCS",
				"link": "http://lolcode.org/",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "HAI 1.2\nVISIBLE \"Hello, World!\"\nKTHXBYE"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"m": {
				"name": "M",
				"encoding": "SBCS",
				"link": "https://github.com/DennisMitchell/m",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "“Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"malbolge": {
				"name": "Malbolge",
				"encoding": "SBCS",
				"link": "https://www.lscheffer.com/malbolge.shtml",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "('&%:9]!~}|z2Vxwv-,POqponl$Hjihf|B@@>,=<M:9&7Y#VV2TSn.Oe*c;(I&%$#\"mCBA?zxxv*Pb8`qo42mZF.{Iy*@dD'<;_?!\\}}|z2VxSSQ"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"matl": {
				"name": "MATL",
				"encoding": "UTF-8",
				"link": "https://github.com/lmendo/MATL",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"mariolang": {
				"name": "MarioLANG",
				"encoding": "SBCS",
				"link": "https://esolangs.org/wiki/MarioLANG",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "+>+>)+)+)+++)++++((((-[!)>->.\n+\"+\"===================#+\".\")\n+++!((+++++++++)++++++)<.---+\n++=#===================\")---.\n++((.-(.)).+++..+++++++.<---\n !+======================---\n=#>++++++++++++++.).+++.-!>!\n  =======================#=#"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"maverick": {
				"name": "Maverick",
				"encoding": "UTF-8",
				"link": "https://github.com/ConorOBrien-Foxx/Maverick",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "outc(32+40`69`76`76`79`12`0`55`79`82`76`68`1)"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"minimal-2d": {
				"name": "Minimal-2D",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/Minimal-2D",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": ">++  R<+++D R >++++++>+++++++++>++++++++++D\nD++>R/ </ +/U/-<<<<<<+++++++++++>+++>++++>L\n+   UU/->+LD    .++++++++++>.--------.----L\nR+++.>++.>--..+++.>.>-.>--.--------.+++.--U"
							}
						}],
						"response": "Hello, world"
					}
				}
			},
			"miniml": {
				"name": "miniML",
				"encoding": "UTF-8",
				"link": "https://github.com/feresum/acml",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "map putchar \"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"minkolang": {
				"name": "Minkolang",
				"encoding": "UTF-8",
				"link": "https://github.com/elendiastarman/Minkolang",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\"OOOOOOOOOOOOO."
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"numberwang": {
				"name": "Numberwang",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/Numberwang_(brainfuck_derivative)",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "068416902713063416902719936733633069415902719930694169027166358363356358306841590271653"
							}
						}],
						"response": "Hello world!"
					}
				}
			},
			"ntfjc": {
				"name": "NTFJ (NTFJC)",
				"encoding": "SBCS",
				"link": "https://github.com/ConorOBrien-Foxx/ntfjc",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "~#~~#~~~@*~##~~#~#@*~##~##~~@::**~##~####@:*~~#~##~~@*~~#~~~~~@*~#~#~###@**~###~~#~@**~##~~#~~@*~~#~~~~#@*"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"oasis": {
				"name": "Oasis",
				"encoding": "SBCS",
				"link": "https://github.com/Adriandmen/Oasis",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"ohm": {
				"name": "Ohm",
				"encoding": "SBCS",
				"link": "https://github.com/MiningPotatoes/Ohm",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"parenthetic": {
				"name": "Parenthetic",
				"encoding": "UTF-8",
				"link": "https://github.com/cammckinnon/Parenthetic",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "((()()())(()(()()))((()(()))((())()()()()()()())((()()(()))((())()()()()()()()()())\n((())()()()()()()()()()()))))((()()())(()(()()()))((()(())(())())((())()()()()()()(\n)()()()()()()()()()()()()()()()()()()()()()()()()())))((()(()))((()(())(())())((()(\n()))(()(()()))((())()()()()()()())))((()(())(())())((()(()))(()(()()))((())()()()()\n)))((()(())(())())((()(()))(()(()()))((())()()()()()()()()()()())))((()(())(())())(\n(()(()))(()(()()))((())()()()()()()()()()()())))((()(())(())())((()(()))(()(()()))(\n(())()()()()()()()()()()()()()())))(()(()()()))((()(())(())())((()(()))(()(()()))((\n())()()()()()()()()()()()()()()()()()()()()()())))((()(())(())())((()(()))(()(()())\n)((())()()()()()()()()()()()()()())))((()(())(())())((()(()))(()(()()))((())()()()(\n)()()()()()()()()()()()()())))((()(())(())())((()(()))(()(()()))((())()()()()()()()\n()()()())))((()(())(())())((()(()))(()(()()))((())()()()))))"
							}
						}],
						"response": "hello world"
					}
				}
			},
			"pbrain": {
				"name": "pbrain",
				"encoding": "SBCS",
				"link": "http://www.parkscomputing.com/applications/pbrain/",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "++++++++++[>+++++++>++++++++++>+++>+<<<<-]>++.>+.+++++++..+++.>++++++++++++++.------------.<<+++++++++++++++.>.+++.------.--------.>+.>."
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"pip": {
				"name": "Pip",
				"encoding": "UTF-8",
				"link": "https://github.com/dloscutoff/pip",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"pl": {
				"name": "pl",
				"encoding": "SBCS",
				"link": "https://github.com/quartata/pl-lang",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"prelude": {
				"name": "Prelude",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/Prelude",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "92480969393782833909095806(^+^+^^+++!)"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"purple": {
				"name": "Purple",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/Purple",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "AA1AA1AA1bA1b1Bo1bb1bbibb1Bi1b     \n ! d l r o W   , o l l e H"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"pushy": {
				"name": "Pushy",
				"encoding": "UTF-8",
				"link": "https://github.com/FTcode/Pushy",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "`Hello, World!`\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"pyke": {
				"name": "Pyke",
				"encoding": "UTF-8",
				"link": "https://github.com/muddyfish/PYKE",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"pyth": {
				"name": "Pyth",
				"encoding": "SBCS",
				"link": "https://github.com/isaacg1/pyth",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"pylons": {
				"name": "Pylons",
				"encoding": "UTF-8",
				"link": "https://github.com/morganthrapp/Pylons-lang",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\"c"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"pyramid-scheme": {
				"name": "Pyramid Scheme",
				"encoding": "UTF-8",
				"link": "https://github.com/ConorOBrien-Foxx/Pyramid-Scheme",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "        ^      ^     ^     ^\n       / \\    / \\   / \\   / \\\n      /out\\  /out\\ /out\\ /out\\\n     ^-----^ -----^----- -----^\n    / \\   / \\    / \\         / \\\n   /chr\\ /chr\\  /chr\\       /chr\\\n  ^----- -----^ -----^     ^-----\n / \\         / \\    / \\   / \\\n/72 \\       /101\\  /108\\ /111\\\n-----       -----  ----- -----"
							}
						}],
						"response": "Hello"
					}
				}
			},
			"random-brainfuck": {
				"name": "Random Brainfuck",
				"encoding": "SBCS",
				"link": "https://github.com/TryItOnline/tio-transpilers",
				"update": "piggyback",
				"piggiback": "brainfuck",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "+[?]--<-<<+[+[<+>--->->->-<<<]>]<<--.<++++++.<<-..<<.<+.>>.>>.<<<.+++.>>.>>-.<<<+."
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"rail": {
				"name": "Rail",
				"encoding": "SBCS",
				"link": "https://esolangs.org/wiki/Rail",
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "$'main'\n -[Hello, World!]o#"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"reregex": {
				"name": "ReRegex",
				"encoding": "UTF-8",
				"link": "https://github.com/TehFlaminTaco/ReRegex",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"reticular": {
				"name": "Reticular",
				"encoding": "UTF-8",
				"link": "https://github.com/ConorOBrien-Foxx/reticular",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\"p;"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"retina": {
				"name": "Retina",
				"encoding": "SBCS",
				"link": "https://github.com/m-ender/retina",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\nHello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"roop": {
				"name": "ROOP",
				"encoding": "SBCS",
				"link": "https://github.com/alejandrocoria/ROOP",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\"\nh"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"rotor": {
				"name": "Rotor",
				"encoding": "UTF-8",
				"link": "https://github.com/quartata/rotor-lang",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"rprogn": {
				"name": "RProgN",
				"encoding": "UTF-8",
				"link": "https://github.com/TehFlaminTaco/Reverse-Programmer-Notation",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"rprogn-2": {
				"name": "RProgN 2",
				"encoding": "SBCS",
				"link": "https://github.com/TehFlaminTaco/RProgN-2",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"silos": {
				"name": "S.I.L.O.S",
				"encoding": "UTF-8",
				"link": "https://github.com/rjhunjhunwala/S.I.L.O.S",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "print Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"smbf": {
				"name": "Self-modifying Brainfuck",
				"encoding": "SBCS",
				"link": "https://soulsphere.org/hacks/smbf/",
				"update": "no-version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "<[.<]\u0000!dlroW ,olleH"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"seriously": {
				"name": "Seriously",
				"encoding": "SBCS",
				"link": "https://github.com/Mego/Seriously/tree/v1",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "H"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"sesos": {
				"name": "Sesos",
				"encoding": "it's complicated",
				"link": "https://github.com/DennisMitchell/sesos",
				"prettify": "lisp",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "add 72\nput\nfwd 1\nadd 101\nput\nadd 7\nput\nput\nadd 3\nput\nfwd 1\nadd 44\nput\nsub 12\nput\nrwd 2\nadd 15\nput\nfwd 1\nput\nadd 3\nput\nsub 6\nput\nsub 8\nput\nfwd 1\nadd 1\nput"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"shapescript": {
				"name": "ShapeScript",
				"encoding": "UTF-8",
				"link": "https://github.com/DennisMitchell/shapescript",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "'Hello, World!'"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"shortc": {
				"name": "shortC",
				"encoding": "SBCS",
				"link": "https://github.com/aaronryank/shortC",
				"unmask": [
					"cflags"
				],
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "AJ\"Hello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"shove": {
				"name": "Shove",
				"encoding": "UTF-8",
				"link": "https://github.com/TryItOnline/shove",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\" ,olleH\"V       v\n S\"!dlroW\"<"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"shtriped": {
				"name": "Shtriped",
				"encoding": "UTF-8",
				"link": "https://github.com/HelkaHomba/shtriped",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "e n\ne b\ni b\n+ x y\n +\n  i x\n  d y\n  +\n +\n d x\n0\n + b b b\n1\n + b n n\n 0\n1\n0\n1\n0\n1\n1\n0\n0\n0\n1\n0\n0\n1\ns n"
							}
						}],
						"response": "HW"
					}
				}
			},
			"snails": {
				"name": "Snails",
				"encoding": "SBCS",
				"link": "https://github.com/feresum/PMA",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
								"command": "F",
								"payload": {
									".code.tio": "\\p|\\P)z(\\a|\\A)z{\\n|\\N)z{\\a|\\A}z(\\m|\\M)z(\\a|\\A"
								}
							},
							{
								"command": "F",
								"payload": {
									".input.tio": "EmYPhNuy\nAaaKVsjL\nonlGviCw\nDdOgFrRn\nISeHZmqc\nzMUkBGJQ"
								}
							}
						],
						"response": "1"
					}
				}
			},
			"snowman": {
				"name": "Snowman",
				"encoding": "SBCS",
				"link": "http://github.com/KeyboardFire/snowman-lang",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "(\"Hello, World!\"sP"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"somme": {
				"name": "Somme",
				"encoding": "UTF-8",
				"link": "https://github.com/ConorOBrien-Foxx/Somme",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "8s+vi:7+::J:^B4*25p9s6+v:J:6-:8-25pim,"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"stackcats": {
				"name": "Stack Cats",
				"encoding": "UTF-8",
				"link": "https://github.com/m-ender/stackcats",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
								"command": "F",
								"payload": {
									".code.tio": "-*(:^-_-_:-_:-_:-_:-_-_:[:^]]:^!-*!->[!_>[!_>[{]>[^-_-_:]]<<<}>[!-:^[[\\\\>]:^[[>:[>:^[<<]]\\\\>[*>+:^:-_]:^[[-_*[>>>[-_[/<]>+^[>[<<]]*>[)"
								}
							},
							{
								"command": "V",
								"payload": {
									"args": [
										"-l"
									]
								}
							}
						],
						"response": "Hello, World!"
					}
				}
			},
			"starry": {
				"name": "Starry",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/Starry",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "        + + +* +  * + + +* + .* +         + +* * +      +* .  + + . + . +        + +   +* + . +          +   * +* + .         + +  * +* . +*      + * . + .* . . .  + * ."
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"straw": {
				"name": "Straw",
				"encoding": "SBCS",
				"link": "https://github.com/tuxcrafting/straw",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "->"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"syms": {
				"name": "Syms",
				"encoding": "UTF-8",
				"link": "https://github.com/CatsAreFluffy/syms",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "{Hello, World!}>"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"taco": {
				"name": "TacO",
				"encoding": "UTF-8",
				"link": "https://github.com/TehFlaminTaco/TacO",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "@\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"taxi": {
				"name": "Taxi",
				"encoding": "SBCS",
				"link": "https://bigzaphod.github.io/Taxi/",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\" is waiting at the Writer's Depot.\nGo to Writer's Depot: west 1st left, 2nd right, 1st left, 2nd left.\nPickup a passenger going to the Post Office.\nGo to the Post Office: north 1st right, 2nd right, 1st left.\nGo to the Taxi Garage: north 1st right, 1st left, 1st right."
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"templates": {
				"name": "Templates Considered Harmful",
				"encoding": "UTF-8",
				"link": "https://github.com/feresum/tmp-lang",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "St<72,'e','l','l','o',44,32,87,'o',114,'l','d',33>"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"thue": {
				"name": "Thue",
				"encoding": "SBCS",
				"link": "https://esolangs.org/wiki/Thue",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "a::=~Hello, World!\n::=\na\n"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"threead": {
				"name": "Threead",
				"encoding": "UTF-8",
				"link": "https://github.com/TehFlaminTaco/Threead",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\"o"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"thutu": {
				"name": "Thutu",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/Thutu",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "/^=1$/Hello, World!=n=x=9/"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"tinylisp": {
				"name": "tinylisp",
				"encoding": "UTF-8",
				"link": "https://github.com/dloscutoff/Esolangs/tree/master/tinylisp",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "(q (Hello, World!))"
							}
						}],
						"response": "(Hello, World!)"
					}
				}
			},
			"trumpscript": {
				"name": "TrumpScript",
				"encoding": "UTF-8",
				"link": "https://github.com/samshadwell/TrumpScript",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "say \" Hello, World!\"\nAmerica is great."
							}
						}],
						"response": "hello, world!"
					}
				}
			},
			"transcript": {
				"name": "TRANSCRIPT",
				"encoding": "UTF-8",
				"link": "https://web.archive.org/web/20071018030927/http://www.corknut.org/code/transcript/",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "He is here.\n>HE, Hello, World!\n>X HE"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"trigger": {
				"name": "Trigger",
				"encoding": "SBCS",
				"link": "http://yiap.nfshost.com/esoteric/trigger/trigger.html",
				"update": "no-version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "HHHeeelll#lllooo,,,   WWWooorrrlllddd!!!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"turtled": {
				"name": "Turtlèd",
				"encoding": "UTF-8",
				"link": "https://github.com/Destructible-Watermelon/Turtl-d",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"Hello, World!\""
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"underload": {
				"name": "Underload",
				"encoding": "SBCS",
				"link": "https://esolangs.org/wiki/Underload",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "(Hello, World!)S"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"unlambda": {
				"name": "Unlambda",
				"encoding": "SBCS",
				"link": "http://www.madore.org/~david/programs/unlambda/",
				"update": "version",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "`.!`.d`.l`.r``.W`. `.,``.l`c`.H.e.oi"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"unreadable": {
				"name": "Unreadable",
				"encoding": "UTF-8",
				"link": "https://esolangs.org/wiki/Unreadable",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"v": {
				"name": "V",
				"encoding": "SBCS",
				"link": "https://github.com/DJMcMayhem/V",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "iHello, World!"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"vitsy": {
				"name": "Vitsy",
				"encoding": "UTF-8",
				"link": "https://github.com/VTCAKAVSMoACE/Vitsy",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "\"!dlroW ,olleH\"Z"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"whirl": {
				"name": "Whirl",
				"encoding": "SBCS",
				"link": "https://bigzaphod.github.io/Whirl/",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "110011100111000001111100000001000011111000011111100000000010\n000011001111100001100010000010011111000100000000000001001111\n100000111110001000000000000000001000111110010000001100001111\n100011000000000100111110011100111000111000001000111000001111\n100000111110010000011111000110011111100001111000001111000001\n110011111100001111000110011100000111000100011111000001111100\n100000110000000111000001110001111100011111000111000001000001\n000011000111110001000001000000011100000111001000111110001111\n000001111000011111100001111110000011110000000000000000011110\n000011100111000011110011111000111110001111100000100000000000\n000000000000111110001110000001110000011100011100111110001000\n100000000011100001111100110000000010011111000111100000111100\n111100010011100000111110000011111001100111100010001111000000\n000001000111110010000010011110011001110001000111110001100000\n100011111000011110011100111111000111100000111100011111000000\n011110000011100100001111000100011111001100011111000111100000\n111001110001100111100100000000000000011111000001111100010010\n000011100001111100100000100011100000111000110011110001001111\n110001100000111100011111000111100000111001000011110001001111\n100000111110000000011110000011110000000000000000111000001110\n000011000001100000111000111000001100111110000111111001001110\n000011111000001100011000001001111110000011100110011111000000\n000111000001110000111100001100"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"whitespace": {
				"name": "Whitespace",
				"encoding": "SBCS",
				"link": "https://web.archive.org/web/20150618184706/http://compsoc.dur.ac.uk/whitespace/tutorial.php",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "   \n  \t\t  \t \t \n  \t\t\t\t\n   \t\n   \t\t\t\n   \t  \n  \t\t \t  \n  \t\t  \t \t\t\n  \t\t\t\t\t\t\t\n   \t  \n   \t\n \n   \t\t\t \n  \t\t   \t\t\n\n  \n \n \n\t \t\n   \t\t \t \t\t\n\t   \t\n  \n \n\n\n  \t\n\n\n\n"
							}
						}],
						"response": "Hello, World!"
					}
				}
			},
			"wise": {
				"name": "Wise",
				"encoding": "UTF-8",
				"link": "https://github.com/Wheatwizard/Wise",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
								"command": "F",
								"payload": {
									".code.tio": "~-<<<~-<<<::^~-<~-<<<~-<<~-:::^~-<<<~-^::?:>~-<~-:?::^~-<<~-<~-<<::^~-<<<<<:<::^<~-<<~-<~-<~-|!::^~-<~-<~-<<<~-<!:::^~-<<<^::^~-<<<<<~-"
								}
							},
							{
								"command": "V",
								"payload": {
									"args": [
										"-a"
									]
								}
							}
						],
						"response": "Hello, World!"
					}
				}
			},
			"woefully": {
				"name": "Woefully",
				"encoding": "UTF-8",
				"link": "https://github.com/Destructible-Watermelon/Woefully",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "||||||||||| ||\n|||||||||| |||\n||||||||| ||||\n|||||||| |||||\n||||||| ||||||\n|||||| |||||||\n||||| ||||||||\n||||| ||||||||\n||||| ||||||||\n||||| ||||||||\n||||| ||||||||\n||||| ||||||||\n|||| |||||||||\n|||| |||||||||\n|||| |||||||||\n|||| |||||||||\n|||| |||||||||\n|||| |||||||||\n||| ||||||||||\n||| ||||||||||\n||| ||||||||||\n||| ||||||||||\n||| ||||||||||\n|| |||||||||||\n|| |||||||||||\n|| |||||||||||\n|| |||||||||||\n|| |||||||||||\n||| ||||||||||\n|||| |||||||||\n||||| ||||||||\n|||||| |||||||\n||||||| ||||||\n|||||||| |||||\n||||||| ||||||\n|||||||| |||||\n||||||||| ||||\n|||||||||| |||\n||||||||||| ||\n|||||||||||| |\n||||||||||| ||"
							}
						}],
						"response": "@"
					}
				}
			},
			"wsf": {
				"name": "wsf",
				"encoding": "UTF-8",
				"link": "https://github.com/dkudriavtsev/wsf",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "                    \n  \n               \n                     \n       \n  \t \t \t \t  \t\n\t \n    \t\t \n  \t\t              \t\t\t\t      \t\t \n    \t\t\t \t                               \t\t \n\t\t      \t\t \t \t \t \t \t \t\t\t \t \t \t \t \t \t \t \t\t\t \n  \t\t \n\t\t"
							}
						}],
						"response": "Hello World!"
					}
				}
			},
			"yup": {
				"name": "yup",
				"encoding": "UTF-8",
				"link": "https://github.com/ConorOBrien-Foxx/yup",
				"update": "git",
				"tests": {
					"helloWorld": {
						"request": [{
							"command": "F",
							"payload": {
								".code.tio": "0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--~0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--|~|0~--e0~--@0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--0e~0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--|~|0~--e0~--@0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0~--~0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--|~|0~--e0~--:::@@0e0e0~--0e0~--0~--:@0e0e0~--0e0e0~--0~--0e0e0~--0e0e0~--0~--~0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--|~|0~--e0~--@0e0e0~--0e0~--0e0e0~--~0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--|~|0~--e0~--@0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0~--0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--~0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--|~|0~--e0~--@@0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--0e0~--0e0e0~--0e0e0~--0~--~0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--|~|0~--e0~--@\n@0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--0~0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--|~|0~--e0~--@0e0e0~--0e0~--0e0e0~--0e0~--~0e0e0~--0e0e0~--0~--0e0e0~--0e0~--0~--0e0e0~--0e0~--0~--|~|0~--e0~--@"
							}
						}],
						"response": "Hello, World!"
					}
				}
			}
		},
		"nameIdPairs": []
	},
	"all": {
		"byId": {}
	}
}
